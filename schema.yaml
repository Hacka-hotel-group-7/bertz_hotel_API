openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/bedroom/:
    get:
      operationId: api_bedroom_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bedroom'
          description: ''
    post:
      operationId: api_bedroom_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bedroom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bedroom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bedroom'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bedroom'
          description: ''
  /api/bedroom/{bedroom_id}/:
    put:
      operationId: api_bedroom_update
      parameters:
      - in: path
        name: bedroom_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bedroom.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bedroom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bedroom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bedroom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bedroom'
          description: ''
    patch:
      operationId: api_bedroom_partial_update
      parameters:
      - in: path
        name: bedroom_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this bedroom.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBedroom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBedroom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBedroom'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bedroom'
          description: ''
  /api/bookings/:
    get:
      operationId: api_bookings_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
          description: ''
    post:
      operationId: api_bookings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/bookings/{booking_id}/:
    get:
      operationId: api_bookings_retrieve
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this reservation.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    put:
      operationId: api_bookings_update
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this reservation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    patch:
      operationId: api_bookings_partial_update
      parameters:
      - in: path
        name: booking_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this reservation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/discounts/:
    get:
      operationId: api_discounts_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
          description: ''
    post:
      operationId: api_discounts_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Promotion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Promotion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Promotion'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: ''
  /api/discounts/{promotion_id}/:
    delete:
      operationId: api_discounts_destroy
      parameters:
      - in: path
        name: promotion_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this promotion.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/hotel/:
    get:
      operationId: api_hotel_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
          description: ''
    post:
      operationId: api_hotel_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hotel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hotel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
          description: ''
  /api/hotel/{hotel_id}/:
    get:
      operationId: api_hotel_retrieve
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
          description: ''
    put:
      operationId: api_hotel_update
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hotel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hotel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
          description: ''
    patch:
      operationId: api_hotel_partial_update
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHotel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHotel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHotel'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
          description: ''
    delete:
      operationId: api_hotel_destroy
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/image/{hotel_id}/:
    post:
      operationId: api_image_create
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HotelImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HotelImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelImage'
          description: ''
  /api/images/{image_id}/:
    delete:
      operationId: api_images_destroy
      parameters:
      - in: path
        name: image_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this hotel image.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomJWT'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomJWT'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomJWT'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomJWT'
          description: ''
  /api/review/{review_id}/:
    get:
      operationId: api_review_retrieve
      parameters:
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this review.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_review_update
      parameters:
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_review_partial_update
      parameters:
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this review.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_review_destroy
      parameters:
      - in: path
        name: review_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this review.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/reviews/{hotel_id}/:
    get:
      operationId: api_reviews_list
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
          description: ''
    post:
      operationId: api_reviews_create
      parameters:
      - in: path
        name: hotel_id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/services/:
    get:
      operationId: api_services_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
          description: ''
    post:
      operationId: api_services_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/staff/:
    get:
      operationId: api_staff_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_staff_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/:
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{user_id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Bedroom:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/BedroomStatusEnum'
        room_type:
          type: string
          maxLength: 20
        bed_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        image:
          type: string
        hotel:
          type: string
          format: uuid
          readOnly: true
      required:
      - hotel
      - id
      - image
      - price
      - room_type
    BedroomStatusEnum:
      enum:
      - limpo
      - ocupado
      - manutenção
      - disponível
      type: string
      description: |-
        * `limpo` - Limpo
        * `ocupado` - Ocupado
        * `manutenção` - Manutencao
        * `disponível` - Disponivel
    CustomJWT:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    DocumentTypeEnum:
      enum:
      - RG
      - CPF
      - PASSAPORTE
      - OUTRO
      type: string
      description: |-
        * `RG` - Rg
        * `CPF` - Cpf
        * `PASSAPORTE` - Passaporte
        * `OUTRO` - Outro
    Hotel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/HotelImage'
          readOnly: true
        bedrooms:
          type: array
          items:
            $ref: '#/components/schemas/Bedroom'
          readOnly: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/HotelStatusEnum'
          minimum: -2147483648
          maximum: 2147483647
        city:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 120
        phone:
          type: string
          maxLength: 12
        description:
          type: string
        reviews:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        promotions:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
      required:
      - address
      - bedrooms
      - city
      - description
      - id
      - images
      - phone
      - promotions
      - reviews
      - services
    HotelImage:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        image:
          type: string
        hotel:
          type: string
          format: uuid
          readOnly: true
      required:
      - hotel
      - id
      - image
    HotelStatusEnum:
      enum:
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `3` - Three
        * `4` - Four
        * `5` - Five
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comments:
          type: string
      required:
      - classification
      - comments
      - id
    NullEnum:
      enum:
      - null
    PatchedBedroom:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        status:
          $ref: '#/components/schemas/BedroomStatusEnum'
        room_type:
          type: string
          maxLength: 20
        bed_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        image:
          type: string
        hotel:
          type: string
          format: uuid
          readOnly: true
    PatchedHotel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/HotelImage'
          readOnly: true
        bedrooms:
          type: array
          items:
            $ref: '#/components/schemas/Bedroom'
          readOnly: true
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/HotelStatusEnum'
          minimum: -2147483648
          maximum: 2147483647
        city:
          type: string
          maxLength: 50
        address:
          type: string
          maxLength: 120
        phone:
          type: string
          maxLength: 12
        description:
          type: string
        reviews:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
        promotions:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
    PatchedReservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        checkin_date:
          type: string
          format: date-time
        checkout_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/ReservationStatusEnum'
        paid:
          type: boolean
        payments_methods:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentsMethodsEnum'
          - $ref: '#/components/schemas/NullEnum'
        total:
          type: number
          format: double
        bedroom:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comments:
          type: string
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 120
        username:
          type: string
          format: email
          maxLength: 120
        password:
          type: string
          writeOnly: true
          maxLength: 255
        country_code:
          type: string
          maxLength: 4
        contact_info:
          type: string
          nullable: true
          maxLength: 16
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_number:
          type: string
          maxLength: 15
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: hospede
        is_superuser:
          type: boolean
          default: false
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    PaymentsMethodsEnum:
      enum:
      - Dinheiro
      - Pix
      - Débito
      - Crédito
      type: string
      description: |-
        * `Dinheiro` - Dinheiro
        * `Pix` - Pix
        * `Débito` - Debito
        * `Crédito` - Credito
    Promotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 30
        discount_amount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - discount_amount
      - id
      - name
    Reservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        checkin_date:
          type: string
          format: date-time
        checkout_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/ReservationStatusEnum'
        paid:
          type: boolean
        payments_methods:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PaymentsMethodsEnum'
          - $ref: '#/components/schemas/NullEnum'
        total:
          type: number
          format: double
        bedroom:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - bedroom
      - checkin_date
      - checkout_date
      - guest
      - id
      - total
    ReservationStatusEnum:
      enum:
      - Confirmado
      - Cancelada
      type: string
      description: |-
        * `Confirmado` - Confirmado
        * `Cancelada` - Cancelada
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        classification:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        comments:
          type: string
      required:
      - classification
      - comments
      - id
    RoleEnum:
      enum:
      - hospede
      - gerente
      - staff
      type: string
      description: |-
        * `hospede` - Hospede
        * `gerente` - Genrente
        * `staff` - Staff
    Service:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        service:
          type: string
          maxLength: 200
      required:
      - id
      - service
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 120
        username:
          type: string
          format: email
          maxLength: 120
        password:
          type: string
          writeOnly: true
          maxLength: 255
        country_code:
          type: string
          maxLength: 4
        contact_info:
          type: string
          nullable: true
          maxLength: 16
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        document_number:
          type: string
          maxLength: 15
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          default: hospede
        is_superuser:
          type: boolean
          default: false
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - country_code
      - document_number
      - id
      - name
      - password
      - reservations
      - reviews
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
